---
# Humio Defaults
replicas: 3
image: humio/humio-core:1.10.5
terminationGracePeriodSeconds: 300

# Warning: changing this to a unsupported mode will disable authentation.
# If set to "saml", use the samlConfig to set the saml configuration.
# If set to "oauth", use the oauthConfig to set the oauth 2.0 configuration.
# If set to "byproxy", use the authByProxyConfig to set the byproxy configuration.
authenticationMethod: single-user

samlConfig:
  publicUrl: ""
  idpSignOnUrl: ""
  idpEntityId: ""
  autoCreateUserOnSuccessfulLogin: true

oauthConfig:
  publicUrl: ""
  autoCreateUserOnSuccessfulLogin: true

authByProxyConfig:
  headerName: ""

extraKafkaConfigs: ""

strixImage: humio/strix:latest
strixImagePullPolicy: Always

initImage: humio/strix:latest
initImagePullPolicy: Always

ingest:
  initialPartitionsPerNode: 4

storage:
  initialPartitionsPerNode: 4

bloomfilter:
  enabled: false
  backfillingEnabled: false

defaultUserInputRegexEngine: HUMIO

nameOverride: ""
fullnameOverride: ""

# Cluster identify type can be either host or zookeeper. Setting host will start up the pod using BOOTSTRAP_HOST_ID, while setting zookeeper will start up the pod using ZOOKEEPER_PREFIX_FOR_NODE_UUID.
clusterIdentity:
  type: host

external:
  kafkaBrokers: ""
  zookeeperServers: ""

waitFor:
  kafka:
    enabled: true

service:
  type: ClusterIP
  http_port: 8080
  es_port: 9200

resources:
  limits:
   cpu: 1
   memory: 2Gi
  requests:
   cpu: 1
   memory: 2Gi

jvm:
  xss: 2m
  xms: 256m
  xmx: 1536m
  maxDirectMemorySize: ""
  extraArgs: "-XX:+UseParallelOldGC -XX:+ScavengeBeforeFullGC -XX:+DisableExplicitGC"

cache:
  localVolume:
    name: local-storage
    enabled: false
    enableLocalVolumeProvisioner: true
    hostPath: /mnt/disks
    storage:
      size: 350Gi

# Warning: cannot use pimaryStorage.type == local along with cache.localVolume.enabled == true.
primaryStorage:
  # Type can be "remote", "local" or "hostPath". If "remote", then use "storageClass" to define settings of the remote
  # storage. If local, use "localVolume" to define settings of the local storage. This will also create local persistent
  # volumes. If hostPath, define the hostPath as per the Kubernetes spec for hostPath.
  type: remote
  mountPath: /data/humio-data
  logsMountPath: /data/logs

logsStorage:
  # Type can be "remote" or "primary". If primary, it will use the same storage that the primaryStorage uses.
  type: primary
  mountPath: /data/logs
  size: 50Gi
  #storageClassName: custom-logs-storage-class

secondaryStorage:
  type: remote
  mountPath: /data/humio-data-secondary

localVolume:
  name: local-primary-storage
  hostPath: /mnt/disks
  storage:
    size: 100Gi

compression:
  type: high
  level: 9

prometheus:
  enabled: false
  port: 8081

ingress:
  enabled: false
  config: []

# Enables the testing integration with github. If enabled, a secret must be created named "github" with key
# "credentials" in the format of user:password.
github:
  enabled: false

#bucket storage setup
bucketStorage:
  backend: ""

nodeSelector: {}
tolerations: []
containerSecurityContext:
  capabilities:
    add: ["SYS_NICE"]
podSecurityContext: {}
affinity: {}
livenessProbe: {}
readinessProbe: {}
storageVolume: {}
# storageClassName: custom-storage-class-name
storageClass: {}
# Follow https://kubernetes.io/docs/concepts/storage/volumes/#hostpath for defining hostPath.
hostPath: {}
serviceAccountAnnotations: {}
openshift:
  host: ""

# Dependencies
cp-helm-charts:
  cp-zookeeper:
    servers: 3
    image: confluentinc/cp-zookeeper
    imageTag: 5.2.1
    imagePullSecrets:
    heapOptions: "-Xms512M -Xmx512M"
    persistence:
      enabled: true
      dataDirSize: 10Gi
      dataLogDirSize: 10Gi
    resources:
      requests:
        cpu: 100m
        memory: 768Mi
      limits:
        cpu: 500m
        memory: 768Mi
  cp-kafka:
    brokers: 3
    image: confluentinc/cp-enterprise-kafka
    imageTag: 5.2.1
    heapOptions: "-Xms512M -Xmx512M"
    persistence:
      enabled: true
      size: 5Gi
      disksPerBroker: 1
    resources:
      requests:
        cpu: 300m
        memory: 768Mi
      limits:
        cpu: 1
        memory: 768Mi

# Ensure essential services are enabled
cp-zookeeper:
  enabled: true
cp-kafka:
  enabled: true
# Disable non-essential services
cp-schema-registry:
  enabled: false
cp-kafka-rest:
  enabled: false
cp-kafka-connect:
  enabled: false
cp-ksql-server:
  enabled: false
cp-control-center:
  enabled: false
